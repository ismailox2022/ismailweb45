function afficherPage(page) {
    var contenu = document.getElementById('contenu');

    // Charger le contenu de la page en fonction du bouton cliqué
    switch (page) {
        case 'page1':
            contenu.innerHTML = "<h1>Contenu du HTML</h1><p>HTML (pour HyperText Markup Language, qu'on peut traduire en « langage de balisage hypertexte ») est le langage utilisé pour structurer une page web et son contenu. On peut par exemple organiser le contenu en un ensemble de paragraphes, une liste d'éléments, utiliser des images ou des tableaux de données. Dans cet article, nous verrons les notions de base pour comprendre HTML et ses fonctionnalités.</p><h2>Qu'est-ce que HTML ?</h2><p>HTML est un langage de balisage qui définit la structure du contenu. Un document HTML est une suite d'éléments utilisés pour encadrer différentes parties du contenu afin de les faire apparaître ou se comporter d'une certaine façon. Les balises autour du contenu permettent de transformer une image ou un texte pour obtenir un lien vers une autre page, de créer des titres, etc.<br><h2>Doctype</h2><p>Le « doctype ». Il s'agit d'un préambule obligatoire. Aux débuts de HTML (en 1991/1992), les doctypes servaient de liens vers des ensembles de règles qu'une page HTML devait suivre pour être considérée valides (avec des fonctionnalités de vérifications d'erreur et autres). Aujourd'hui, ils ne sont plus utilisés ainsi et ce marqueur sert uniquement au bon comportement du document. C'est tout ce qu'il y a à savoir là-dessus pour le moment.</p><h2>Html</h2><p>L'élément 'html' est celui qui contient tout le reste de la page. On l'appelle aussi l'élément racine. Il contient ici l'attribut lang qui indique la langue principale du contenu du document.</p><h2>Head</h2><p>L'élément (head) sert de conteneur pour tout ce qu'on veut inclure dans une page HTML qui n'est pas du contenu à afficher à l'écran. Cela inclut les mots-clés et une description de la page destinée aux moteurs de recherches, les liens vers le CSS qui mettra en forme notre contenu, les déclarations pour les jeux de caractères utilisés, etc.</p><h2>Meta charset='utf-8'</h2><p> L'élément (head sert de conteneur pour tout ce qu'on veut inclure dans une page HTML qui n'est pas du contenu à afficher à l'écran. Cela inclut les mots-clés et une description de la page destinée aux moteurs de recherches, les liens vers le CSS qui mettra en forme notre contenu, les déclarations pour les jeux de caractères utilisés, etc.</p><h2>Title</h2><p>L'élément 'title' définit le titre de la page, qui apparaîtra dans l'onglet sur lequel la page est chargée. Il sert aussi à décrire la page lorsqu'on l'ajoute aux favoris ou qu'elle est listée dans les résultats d'un moteur de recherche.</p><h2>Body</h2><p>L'élément 'body' contient tout le contenu qu'on veut afficher aux utilisatrices et utilisateurs web lorsqu'ils visitent la page, que ce soit du texte, des vidéos, des jeux, des pistes audio, etc.</p><h2>Image</h2><p>'img':Comment mentionné auparavant, cet élément permet d'intégrer une image dans la page là où l'élément est placé. L'image à afficher est désignée par l'attribut src (source) qui contient le chemin vers le fichier image.Nous avons également inclus un attribut alt (pour texte alternatif). L'attribut ('alt'), permet d'indiquer un texte descriptif pour les personnes qui ne peuvent pas voir l'image.</p> <h2>Balise du texte</h2><p>Cette section décrira certains des éléments HTML essentiels pour baliser et structurer le texte d'un document.<h2>Titre</h2><p>Les éléments de titre permettent d'indiquer les parties du contenu qui sont des titres ou des sous-titres. De la même façon qu'un livre peut avoir un titre principal, des titres de chapitre, des sous-titres, un document HTML peut en avoir également. HTML contient 6 niveaux de titre</p><h2>Paragraphes</h2><p>Comme expliqué plus tôt, les éléments ('p') forment des paragraphes de texte. Cet élément est souvent utilisé pour baliser du texte normal du contenu d'une page.</p> <h2>Listes</h2><p>Une bonne partie du contenu web prend la forme de listes. HTML possède des éléments dédiés. Baliser une liste se fait toujours avec au moins deux éléments. Les types de liste les plus fréquemment utilisés sont les listes ordonnées et les listes non-ordonnées :</p><h3>Les listes non-ordonnées</h3><p>Utilisées pour les listes où l'ordre des éléments n'a pas d'importance, comme une liste de courses. Pour celles-ci, on utilise un élément ('ul').</p><h3>Les listes ordonnées</h3><p>Utilisées pour les listes où l'ordre des éléments est important, comme une recette de cuisine. Pour celles-ci, on utilise un élément ('ol').Chaque élément d'une liste est placé dans un élément ('li').</p><h2>Liens</h2><p>Les liens sont importants, ce sont eux qui forment la toile qu'est le Web ! Pour ajouter un lien, on utilisera un élément ('a') (« a » correspondant à « ancre »). Pour placer un lien dans votre paragraphe Ajoutez un attribut ('href') à l'élément ('a'),href signifie hypertext reference soit «référence hypertexte ».</p>";
            break;
        case 'page2':
            contenu.innerHTML = "<h1>Contenu du CSS</h1><p>Les CSS (Cascading Style Sheets en anglais, ou « feuilles de style en cascade ») sont le code utilisé pour mettre en forme une page web.</p><h2>Les différents types de sélecteurs</h2><h3>Sélecteur d'ID</h3><p>#my-id sélectionne (p id='my-id') ou (a id='my-id')</p><h3>Sélecteur de classe</h3><p>.my-class sélectionne (p class='my-class') et (a class='my-class!')</p><h3>Sélecteur de pseudo-classe</h3><p>a:hover sélectionne ('a') mais uniquement quand le pointeur de la souris est au-dessus du lien.</p><h2>Propriétés</h2><p>Padding : cette propriété définit l'espace à l'intérieur d'un element HTML, entre le contenu et les bords de l'élément.L'espace peut etre spécifié en pixels (px) ou en pourcentage (%) de la largeur de l'élément parent.<br>Border, la ligne qui est juste autour du padding (en français cela correspond à la bordure)<br>Margin, l'espace extérieur, autour de l'élément (en français cela correspond à la marge). L'espace peut etre spécifié en pixels (px), en pourcentage (%) de la largeur de l'élément parent. Vous pouvez également spécifier différentes valeurs pour chaque coté de l'élément(par exemple : 'margin: 20px 40px 10px 30px;' définit une marge de 20 pixels en haut,40 pixels à droite, 10 pixels en bas et 30 pixels à gauche.<br>Font-family : cette propriété définit la famille de polices à utiliser pour un élément HTML. Vous pouvez spécifier une seul police, comme 'Arial', ou une liste de polices séparées par des virgules  ,par exemple:'Arial,sans cherif'<br>Font-size: cette propriété définit la taille de la police de caractères pour un élément HTML. La taille peut etre spécifiée en pixels (px), en points (pt).<br>height:cette propriété définit la hauteur d'un élément HTML. La hauteur peut etre spécifié en pixels (px) ou en pourcentage (%).<br>width (la largeur de l'élément)<br>Background-color, la couleur derrière le contenu de l'élément et son padding<br>Color, la couleur du contenu de l'élément (généralement du texte)<br>Text-shadow, affiche une ombre portée sur le texte à l'intérieur de l'élément<br>Display, définit le mode d'affichage d'un élément (on ne s'occupera pas de cette propriété pour le moment)</p>";
            break;
        case 'page3':
            contenu.innerHTML = "<h1>Contenu du Java Script</h1><p>JavaScript est un langage de programmation qui ajoute de l'interactivité à votre site web (par exemple : jeux, réponses quand on clique sur un bouton ou des données entrées dans des formulaires, composition dynamique, animations). Cet article vous aide à débuter dans ce langage passionnant et vous donne une idée de ses possibilités.<br>Le code JavaScript peut être placé à trois endroits différents d'un fichier HTML : Dans une balise HTML : c'est la méthode la plus simple. Elle est toutefois déconseillée, car le HTML et le JavaScript ne sont alors pas dissociés : le code est donc difficilement maintenable et évolutif, et compliqué à déboguer. Avec cette méthode, en outre, il faut écrire de nouveau le même code JS au niveau de chaque élément et dans chaque page où il doit s'exécuter dans l'élément HTML ('script') : le rôle de cet élément est de placer du code JavaScript dans le même fichier que le HTML. Là encore, la méthode présente des limites en termes d'évolutivité et de manipulation.Dans un fichier séparé : c'est la méthode recommandée. Le HTML et le JavaScript sont séparés, ce qui améliore leur lisibilité et facilite la modification et le débogage du code. Placer le code JavaScript dans un fichier séparé permet en outre de l'appliquer à plusieurs éléments, et sur plusieurs pages, sans avoir à le dupliquer. Le travail du développeur est ainsi facilité.</p><h2>Variables</h2><p>Les variables sont des conteneurs dans lesquels on peut stocker des valeurs. Pour commencer, il faut déclarer une variable avec le mot-clé let en le faisant suivre de son nom, par exemple:('var myvariable ='nom';).Notez que les variables peuvent contenir des types différents de données:</p><h3>Chaîne de caractère</h3> <p>Une suite de caractères connue sous le nom de chaîne. Pour indiquer que la valeur est une chaîne, il faut la placer entre guillemets, par exemple : ('var myvariable= 'nom';)</p><h3>Nombre</h3><p>Les nombres ne sont pas entre guillemets, par ecemple: ('var myvariable='10';)</p><h3>Booléen</h3><p>Une valeur qui signifie vrai ou faux. true/false sont des mots-clés spéciaux en JS, ils n'ont pas besoin de guillemets, par exemple: ('var myvariable='true';) </p><h3>Objet</h3><p>À la base de toute chose. Tout est un objet en JavaScript et peut être stocké dans une variable. Gardez cela en mémoire tout au long de ce cours, par exemple: ('var myvariable='document.getElementById('a')</p><h2>Fonctions</h2><p>Les fonctions sont un moyen de compacter des fonctionnalités en vue de leur réutilisation. Quand vous avez besoin de la procédure, vous pouvez appeler une fonction, par son nom, au lieu de ré‑écrire la totalité du code chaque fois.</p>";
            break;
        default:
            contenu.innerHTML = "<h1>SITE WEB</h1><p> ISMAIL TOUMI<br> du groupe A0302</p>";
            break;
    }
}
